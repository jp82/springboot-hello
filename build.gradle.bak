buildscript {
   dependencies {
        classpath(group: "org.codehaus.groovy", name: "groovy", version: "2.1.0")
   }
}


plugins {
	id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.example'

sourceCompatibility = '11'

repositories {
      maven {
        //url "${sunatPUrepo}libs-local-dev"
        url "${sunatPUrepo}remote-repo-libs"
        allowInsecureProtocol = true
        credentials {
            username = "${sunatPUrepoUser}"
            password = "${sunatPUrepoPassword}"
        }
      }
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

}

//def dockerImageName = project.properties['dockerRegistry'] + '/microservices/' + project.name

/*
jib {
    from {
        image = 'gcr.io/distroless/java:11'
    }

    to {
        image = dockerImageName
        tags = [project.version, 'latest']
        auth {
            username = dockerRegistryUser ?: ''
            password = dockerRegistryPassword ?: ''
        }
    }

    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
    allowInsecureRegistries = true
}
*/


